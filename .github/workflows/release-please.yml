on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  id-token: 'write'

name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          token: ${{ github.token }}
          release-type: node
      # The logic below handles the npm publication:
      - uses: actions/checkout@v3
        # these if statements ensure that a publication only occurs when
        # a new release is created:
        if: ${{ steps.release.outputs.release_created }}
        with:
          ref: main
      - uses: pnpm/action-setup@v2
        if: ${{ steps.release.outputs.release_created }}
        with:
          version: latest
      - uses: actions/setup-node@v4
        if: ${{ steps.release.outputs.release_created }}
        with:
          node-version: 20
          cache: pnpm
          registry-url: 'https://registry.npmjs.org'
      - run: pnpm install
        if: ${{ steps.release.outputs.release_created }}
      - run: pnpm build
        if: ${{ steps.release.outputs.release_created }}
      - id: auth
        if: ${{ steps.release.outputs.release_created }}
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/626179414504/locations/global/workloadIdentityPools/ga-embedded-app-sdk/providers/ga-embedded-app-sdk'
          service_account: 'ga-embedded-app-sdk@discord-app-city-prd.iam.gserviceaccount.com'
      - id: secrets
        if: ${{ steps.release.outputs.release_created }}
        uses: 'google-github-actions/get-secretmanager-secrets@v1'
        with:
          secrets: |-
            NPM_TOKEN:discord-app-city-prd/embedded-app-sdk-deploy-token
      - name: Publish ðŸš€
        if: ${{ steps.release.outputs.release_created }}
        run: pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ steps.secrets.outputs.NPM_TOKEN }}
